import{defineAsyncComponent as E,createApp as _}from"/view-ui/libs/vue.js";import a,{mode as f,pathname as y,urls as g,Lang as d}from"/view-ui/libs/view.js";import{message as m}from"/view-ui/libs/viewui.js";import w from"/view-ui/libs/network.js";const L=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&c(o)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?t.credentials="include":e.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}};L();const v="modulepreload",D=function(s){return"/view-ui/"+s},l={},u=function(r,n,c){return!n||n.length===0?r():Promise.all(n.map(e=>{if(e=D(e),e in l)return;l[e]=!0;const t=e.endsWith(".css"),o=t?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${e}"]${o}`))return;const i=document.createElement("link");if(i.rel=t?"stylesheet":v,t||(i.as="script",i.crossOrigin=""),i.href=e,document.head.appendChild(i),t)return new Promise((p,h)=>{i.addEventListener("load",p),i.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${e}`)))})})).then(()=>r())},A=`/view-ui/${a.dataSource}?mode=${f}&p=${y}`;a.initDataPromise=w.get(A).then(s=>{for(const r of s){const{url:n}=r;if(typeof n=="string"){g[n]=r;const c=r.main||r.app||r.mask;if(c){const{name:e,icon:t,color:o}=c;r.name=e,r.icon=t,r.color=o}}}return s});const O=E(()=>u(f==="single"?()=>import("./single/index.js"):()=>import("./split/index.js"),["platform/split/index.js","platform/export-helper.js"])),P=_(O);P.mount(document.body);window.addEventListener("load",()=>u(()=>import("./install.js"),[]));window.addEventListener("offline",()=>{m.warning(d({en:'"network offline"',zh:"\u7F51\u7EDC\u8FDE\u63A5\u5DF2\u65AD\u5F00"}))});window.addEventListener("online",()=>{m.success(d({en:"Network connection success",zh:"\u7F51\u7EDC\u8FDE\u63A5\u5DF2\u6062\u590D"}))});export{u as _};
